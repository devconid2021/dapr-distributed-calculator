name: dapr-distributed-calculator

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  provision-infra:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Terraform Init and Plan
      run: |
        # Exit when any command returns a failure status
        set -e  
        cd ./.github/terraform

        # Write terraform.tfvars
        echo 'resource_group_location = "'${{ env.RGLOCATION }}'"' | tee terraform.tfvars
        echo 'resource_group_name = "'${{ env.RGNAME }}'"' | tee -a terraform.tfvars
        echo 'aks_name = "'${{ env.PREFIX }}'"' | tee -a terraform.tfvars
        echo 'arc_name = "'${{ env.PREFIX }}'"' | tee -a terraform.tfvars
        echo 'akv_name = "'${{ secrets.TFKV }}'"' | tee -a terraform.tfvars
        echo 'client_id = "'${{ env.ARM_CLIENT_ID }}'"' | tee -a terraform.tfvars
        echo 'client_secret = "'${{ env.ARM_CLIENT_SECRET }}'"' | tee -a terraform.tfvars
        echo 'subscription_id = "'${{ env.ARM_SUBSCRIPTION_ID }}'"' | tee -a terraform.tfvars
        echo 'tfstaterg = "'${{ env.TFSTATERG }}'"' | tee -a terraform.tfvars
        
        # Write backend.tfvars
        echo 'resource_group_name = "'$TFSTATERG'"' | tee backend.tfvars
        echo 'storage_account_name = "'${{ secrets.TFSTATESTORAGE }}'"' | tee -a backend.tfvars
        echo 'container_name = "tfstate"' | tee -a backend.tfvars
        echo 'key = "'$PREFIX'-terraform.tfstate"' | tee -a backend.tfvars

        # Initialize Terraform
        terraform init -input=false -backend-config="backend.tfvars"

        # Apply Terraform plan
        terraform apply -input=false -auto-approve
      env:
        RGLOCATION: southeastasia
        RGNAME: rg-devcon-2021
        PREFIX: daprdc
        TFSTATERG: ${{ secrets.TFSTATERG }}
        ARM_CLIENT_ID: ${{ secrets.CLIENTID }}
        ARM_CLIENT_SECRET: ${{ secrets.CLIENTSECRET }}
        ARM_TENANT_ID: ${{ secrets.TENANTID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTIONID }}
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Build docker image
        run: | 
          make build
      - name: docker login
        if: github.event_name != 'pull_request'
        run: |
          docker login ${{ secrets.ACRSERVER }}
      - name: Publish docker image
        if: github.event_name != 'pull_request'
        run: |
          make push
